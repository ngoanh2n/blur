/**
 * Author: ngoanh2n
 */
buildscript {
    apply {
        from(file("gradle/global.gradle"))
        from(file("gradle/helpers.gradle"))
    }
    apply {
        from(bscript.repositories) to(getBuildscript())
        from(bscript.dependencies) to(getBuildscript())
    }
}

allprojects {
    setGroup(property("artifact.group"))
    setVersion(property("artifact.version"))
}

subprojects {
    apply {
        plugin("java")
        plugin("base")
        plugin("idea")
        plugin("signing")
        plugin("java-library")
        plugin("maven-publish")
        plugin("io.qameta.allure")
        plugin("io.freefair.aspectj.post-compile-weaving")

        from(config.test)
        from(config.allure)
        from(config.compilation)
        from(config.publication)
        from(config.repositories)
        from(config.dependencies)
    }

    getTasks().clean.doFirst {
        delete(getProject().file("out"))
        delete(getRootProject().files("build"))
    }

    getTasks().build.configure {
        getDependsOn().removeIf { task -> (task == "check") }
        assemble.dependsOn("clean")
        dependsOn("publishToMavenLocal")
    }
}
